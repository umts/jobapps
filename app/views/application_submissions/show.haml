%h1 #{@record.position.name} Application Record

%p submitted #{format_date_time @record.created_at}
%p by #{@record.user.name_and_email}
= button_to 'Print this page',
  application_submission_path(@record, format: :pdf),
  method: :get,
  class: 'btn btn-secondary'
- if @record.rejected?
  %p
    = button_to 'Re-review Applicant',
      unreject_application_submission_path(@application_submission, id: @record.id),
      class: 'btn btn-primary'
- if !@record.saved_for_later? && @record.note_for_later.present?
  %p
    %i This application had previously been saved for later review. Your note:
  %p
    = @record.note_for_later
%table.table.table-bordered.application-record-table
  %thead
    %tr
      %th Questions
      %th Responses
  %tbody
  - @record.data.each do |prompt, response, data_type, _question_id|
    %tr
      - if data_type == 'heading'
        %td{colspan: 2}
          %b=prompt.upcase
      - elsif data_type == 'explanation'
        %td{colspan: 2}
          %i= render_markdown prompt
      - else
        %td=prompt
      %td=response

-if @record.unavailability.present?
  %strong Unavailability
  =fields_for :unavailability do |u|
    =render partial: "unavailabilities_calendar_staff",
      locals: { unavailability: @record.unavailability }
  %p Grey boxes indicate that applicant is unavailable

-if @record.resume.attached?
  %p
    %strong Resume:
    =link_to @record.resume.filename, rails_blob_path(@record.resume, disposition: 'attachment')

- if @current_user.staff?
  - if @record.pending?
    %h3 Review application
    = render 'deny', locals: { record: @record }
    = render 'approve', locals: { record: @record }
    = render 'save_for_later', locals: { record: @record }
  - else
    %p Application reviewed on: #{format_date_time @record.updated_at}
    - if @record.staff_note.present?
      %p Staff note (internal reason for denial): #{@record.staff_note}
    - if @record.rejection_message.present?
      %p Rejection message (shared with candidate): #{@record.rejection_message}
  - if @interview.present?
    - if @interview.pending?
      %p Interview is scheduled for: #{@interview.information}
      %p
        = link_to 'Click here for a calendar export file',
          interview_path(@interview, format: :ics)
      %h3 Reschedule interview
      = form_tag controller: :interviews,
        action: :reschedule,
        id: @interview.id do
        .form-group
          = label_tag :scheduled, 'New interview date/time:'
          = text_field_tag :scheduled, '',
            required: true,
            placeholder: 'Click here to select date/time...',
            class: 'form-control datetimepicker'
        .form-group
          = label_tag :location, 'New location:'
          = text_field_tag :location, @interview.location,
            required: true,
            class: 'form-control'
        .form-group
          = submit_tag 'Reschedule interview', class: 'btn btn-secondary'
      %h3 Mark interview as complete:
      = form_tag controller: :interviews,
        action: :complete,
        id: @interview.id do
        .form-group
          = submit_tag 'Candidate hired', name: 'hired', class: 'btn btn-primary'
        .form-group
          = label_tag :interview_note, 'Reason for rejection:'
          = text_area_tag :interview_note, '', class: 'form-control'
        .form-group
          = submit_tag 'Candidate not hired', class: 'btn btn-danger'
    - else # application is being reviewed for whatever reason
      .form-group
        Interview occurred on
        = @interview.information
- else # student
  - if @record.pending?
    Your application is pending and has not yet been reviewed.
    - if configured_value [:on_application_denial, :notify_applicant],
      default: true
      You will be notified when your application has been reviewed.
    - else
      You will be contacted if an interview is requested.
  - else
    - if @interview.present?
      - if @interview.pending?
        Your interview is scheduled for
      - else
        Your interview occurred on
      = @interview.information
    - else
      Your application has been denied.
      - if configured_value([:on_application_denial, :notify_of_reason],
        default: true)
        Reason:
        = @record.rejection_message
